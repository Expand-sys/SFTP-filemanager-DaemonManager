"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MEMORY_STORE = exports.MemoryStore = void 0;
const events_1 = require("events");
class MemoryStore extends events_1.EventEmitter {
    constructor({ store = new Map(), prefix = 'sess:' } = {}) {
        super();
        this.store = store;
        this.prefix = prefix;
    }
    getKey(sessionId) {
        return `${this.prefix}${sessionId}`;
    }
    async set(sessionId, session, expiry = null) {
        this.store.set(this.getKey(sessionId), [session, expiry]);
    }
    async get(sessionId) {
        var _a;
        const result = (_a = this.store.get(this.getKey(sessionId))) !== null && _a !== void 0 ? _a : null;
        if (!result) {
            return null;
        }
        const [session, expiry] = result;
        if (expiry && expiry <= Date.now()) {
            return null;
        }
        return [session, expiry];
    }
    async destroy(sessionId) {
        this.store.delete(this.getKey(sessionId));
    }
    async touch(sessionId, expiry = null) {
        const sessionData = await this.get(sessionId);
        if (!sessionData) {
            return;
        }
        const [session] = sessionData;
        this.set(sessionId, session, expiry);
    }
    async all() {
        return [...this.store.entries()].reduce((soFar, [k, v]) => {
            soFar[k] = v[0];
            return soFar;
        }, {});
    }
}
exports.MemoryStore = MemoryStore;
exports.MEMORY_STORE = new MemoryStore();
